{
  "name": "app",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "serve": "vue-cli-service serve",
    "lint:vue": "vue-cli-service lint",
    "test:e2e": "vue-cli-service test:e2e",
    "test:unit": "vue-cli-service test:unit",
    "__dev_comments__": "(1) Configure your dev environment with babel-node and node-dev (or nodemon if nodemon isn't broken): https://github.com/babel/example-node-server. UPDATE: In Babel 7, the 'babel-node' command comes from @babel/node: https://new.babeljs.io/docs/en/next/v7-migration.html#babel-node. (2) If node-dev doesn't work in dev:hapi, then use PM2's watch and restart options for development: https://pm2.io/doc/en/runtime/guide/development-tools/#watch-options.",
    "dev": "npm-run-all --parallel dev:vue dev:hapi",
    "dev:vue": "vue-cli-service serve",
    "dev:hapi": "NODE_ENV=development node-dev --no-notify src/server/server.js --exec babel-node",
    "__build_comments__": "(1) Configure your production build with babel, as opposed to babel-node (https://github.com/babel/example-node-server), but use the new @babel/cli package (https://babeljs.io/docs/en/babel-cli). (2) When creating your project inside of a Docker environment, your node_modules packages should only be accessible inside of Docker. Refer to the README.md file for details on how to build the app inside of a Docker container.",
    "prebuild": "npm run clean",
    "build": "npm-run-all --serial build:vue build:hapi",
    "build:vue": "vue-cli-service build",
    "build:hapi": "NODE_ENV=production babel src/server --out-dir dist/server --copy-files",
    "postbuild": "echo Build Complete! Now run: npm run prod",
    "__prod_comment__": "After building your app for production, run 'npm run prod' to start the Node server and run your app in production mode",
    "prod": "NODE_ENV=production node dist/server/server.js",
    "__buildprod_comment__": "The buildprod command is a combination of the 'build' command and the 'prod' command.",
    "prebuildprod": "npm run clean",
    "buildprod": "npm-run-all --serial build:vue build:hapi prod",
    "__clean_comment__": "'rimraf' is the UNIX command 'rm -rf' for Node.",
    "clean": "rimraf ./dist && mkdir ./dist",
    "__lint_comment__": "This will run ESLint against anything in our src folder with the file extension .js or .vue.",
    "lint": "eslint --ext .js, .vue src",
    "__comment__": "Do I still need the following linting scripts? I need to test them and see if they do anything differently than the one above.",
    "lint:js": "eslint src/;exit 0",
    "lint:vue-old": "eslint --ext .js, .vue src;exit 0",
    "__test_comment__": "Testing the Server: https://github.com/babel/example-node-server#testing-the-server. Vue Testing: https://itnext.io/vue-js-and-webpack-4-from-scratch-part-3-3f68d2a3c127.",
    "pretest": "npm run lint",
    "__test:client__": "jest",
    "test:server": "NODE_ENV=test mocha --compilers js:babel-register",
    "test:hapi": "lab",
    "posttest": "echo The test suite is complete!",
    "deploy": ""
  },
  "dependencies": {
    "@babel/runtime": "^7.6.0",
    "@babel/runtime-corejs2": "^7.6.0",
    "@fortawesome/fontawesome-svg-core": "^1.2.18",
    "@fortawesome/free-solid-svg-icons": "^5.8.2",
    "@fortawesome/vue-fontawesome": "^0.1.6",
    "@hapi/boom": "^7.4.2",
    "@hapi/cookie": "^10.1.1",
    "@hapi/hapi": "^18.3.1",
    "@hapi/inert": "^5.2.1",
    "@hapi/joi": "^15.1.0",
    "@tinymce/tinymce-vue": "^2.0.0",
    "axios": "^0.18.0",
    "bcrypt": "^3.0.6",
    "body-parser": "^1.19.0",
    "core-js": "^2.6.9",
    "dotenv": "^8.0.0",
    "hapi-pino": "^6.0.1",
    "lodash.debounce": "^4.0.8",
    "make-promises-safe": "^5.0.0",
    "neo4j-driver": "^1.7.5",
    "node-dev": "^4.0.0",
    "nodemailer": "^6.3.0",
    "npm-run-all": "^4.1.5",
    "poop": "^3.0.1",
    "register-service-worker": "^1.6.2",
    "rimraf": "^2.6.3",
    "sanitize-html": "^1.20.1",
    "style-resources-loader": "^1.2.1",
    "uuid": "^3.3.2",
    "vue": "^2.6.10",
    "vue-router": "^3.0.3",
    "vuedraggable": "^2.21.0",
    "vuelidate": "^0.7.4",
    "vuex": "^3.0.1",
    "vuex-persistedstate": "^2.5.4"
  },
  "devDependencies": {
    "@babel/cli": "^7.6.0",
    "@babel/core": "^7.6.0",
    "@babel/plugin-transform-runtime": "^7.6.0",
    "@babel/preset-env": "^7.6.0",
    "@vue/cli-plugin-babel": "^3.7.0",
    "@vue/cli-plugin-e2e-nightwatch": "^5.0.8",
    "@vue/cli-plugin-eslint": "^3.7.0",
    "@vue/cli-plugin-pwa": "^3.7.0",
    "@vue/cli-plugin-unit-jest": "^3.7.0",
    "@vue/cli-service": "^3.7.0",
    "@vue/test-utils": "1.0.0-beta.29",
    "babel-core": "^7.0.0-bridge.0",
    "babel-eslint": "^10.0.1",
    "babel-jest": "^23.6.0",
    "eslint": "^5.16.0",
    "eslint-plugin-vue": "^5.0.0",
    "stylus": "^0.54.5",
    "stylus-loader": "^3.0.2",
    "vue-template-compiler": "^2.5.21"
  }
}
